{"version":3,"sources":["components/Profile/Stats/Stats.module.css","components/Profile/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/StatisticFormat/StatisticFormat.module.css","components/Statistics/StatisticsSection/StatisticsSection.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Stats/Stats.js","components/Profile/Profile/Profile.js","components/Statistics/StatisticFormat/createRandomColor.js","components/Statistics/StatisticFormat/StatisticFormat.js","components/Statistics/StatisticsSection/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Stats","followers","views","likes","className","s","stats","label","quantity","defaultProps","Profile","avatar","name","tag","location","profile","description","src","alt","createRandomColor","color","i","Math","floor","random","StatisticFormat","statList","map","id","percentage","item","style","backgroundColor","Statistics","title","statistics","FriendList","friends","friendList","isOnline","statusOnline","statusOffline","width","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5891ec30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Stats_stats__2oSg3\",\"label\":\"Stats_label__2fL1w\",\"quantity\":\"Stats_quantity__2oKoO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2JwMs\",\"description\":\"Profile_description__eISKw\",\"avatar\":\"Profile_avatar__3B-H8\",\"name\":\"Profile_name__h0F90\",\"tag\":\"Profile_tag__1fvuS\",\"location\":\"Profile_location__2S6Pd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__2YrD1\",\"item\":\"FriendList_item__3CEyD\",\"status\":\"FriendList_status__2_Ajg\",\"statusOnline\":\"FriendList_statusOnline__1VN4b FriendList_status__2_Ajg\",\"statusOffline\":\"FriendList_statusOffline__3Fchb FriendList_status__2_Ajg\",\"avatar\":\"FriendList_avatar__1O7PQ\",\"name\":\"FriendList_name__1OC4l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"StatisticFormat_statList__Ss53Y\",\"item\":\"StatisticFormat_item__1o6aB\",\"label\":\"StatisticFormat_label__1c6gv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"StatisticsSection_statistics__3XOK5\",\"title\":\"StatisticsSection_title__yZWDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1SuwA\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Stats.module.css';\r\n\r\nexport default function Stats({ followers, views, likes }) {\r\n  return (\r\n    <ul className={s.stats}>\r\n      <li>\r\n        <span className={s.label}>Followers</span>\r\n        <span className={s.quantity}>{followers}</span>\r\n      </li>\r\n      <li>\r\n        <span className={s.label}>Views</span>\r\n        <span className={s.quantity}>{views}</span>\r\n      </li>\r\n      <li>\r\n        <span className={s.label}>Likes</span>\r\n        <span className={s.quantity}>{likes}</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStats.defaultProps = {\r\n  followers: 0,\r\n  views: 0,\r\n  likes: 0,\r\n};\r\n\r\nStats.propTypes = {\r\n  followers: PropTypes.number,\r\n  views: PropTypes.number,\r\n  likes: PropTypes.number,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Stats from '../Stats/Stats';\r\n\r\nimport s from './Profile.module.css';\r\n\r\nexport default function Profile({ avatar, name, tag, location, stats }) {\r\n  return (\r\n    <div className={s.profile}>\r\n      <div className={s.description}>\r\n        <img src={avatar} alt=\"user avatar\" className={s.avatar} />\r\n        <p className={s.name}>{name}</p>\r\n        <p className={s.tag}>@{tag}</p>\r\n        <p className={s.location}>{location}</p>\r\n      </div>\r\n\r\n      <Stats {...stats} />\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.defaultProps = {\r\n  avatar:\r\n    'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder',\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n};","  \r\nexport default function createRandomColor() {\r\n    const hexParts = '0123456789ABCDEF';\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i += 1) {\r\n      color += hexParts[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  }","import React from 'react';\r\nimport s from './StatisticFormat.module.css';\r\nimport createRandomColor from './createRandomColor';\r\n\r\nexport default function StatisticFormat({ stats }) {\r\n  return (\r\n    <ul className={s.statList}>\r\n      {stats.map(({ id, label, percentage }) => (\r\n        <li\r\n          key={id}\r\n          className={s.item}\r\n          style={{ backgroundColor: createRandomColor() }}\r\n        >\r\n          <span className={s.label}>{label}</span>\r\n          <span className={s.percentage}>{percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './StatisticsSection.module.css';\r\nimport StatisticFormat from '../StatisticFormat/StatisticFormat';\r\n\r\nexport default function Statistics({ title, stats }) {\r\n  return (\r\n    <section className={s.statistics}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      <StatisticFormat stats={stats} />\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './FriendList.module.css';\r\n\r\nexport default function FriendList({ friends }) {\r\n  return (\r\n    <ul className={s.friendList}>\r\n      {friends.map(({ avatar, name, isOnline }) => (\r\n        <li className={s.item}>\r\n          <span className={isOnline ? s.statusOnline : s.statusOffline}></span>\r\n          <img className={s.avatar} src={avatar} alt={name} width=\"90\" />\r\n          <p className={s.name}>{name}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendList.defaultProps = {\r\n  avatar:\r\n    'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder',\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf({\r\n    isOnline: PropTypes.bool.isRequired,\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './TransactionHistory.module.css';\r\n\r\nexport default function TransactionHistory({ items }) {\r\n  return (\r\n    <table className={s.transactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {items.map(({ id, type, amount, currency }) => (\r\n          <tr key={id}>\r\n            <td>{type}</td>\r\n            <td>{amount}</td>\r\n            <td>{currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.number.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n};","\r\nimport React from 'react';\r\nimport Profile from './Profile/Profile/Profile';\r\nimport Statistics from './Statistics/StatisticsSection/Statistics';\r\nimport FriendList from './FriendList/FriendList';\r\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\r\n\r\nimport user from '../data/user.json';\r\nimport statisticalData from '../data/statistical-data.json';\r\nimport friends from '../data/friends.json';\r\nimport transactions from '../data/transactions.json';\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <Profile {...user}></Profile>\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </>\r\n  );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './base.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}